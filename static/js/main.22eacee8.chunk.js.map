{"version":3,"sources":["assets/logo.svg","api/scramble.web.api.js","components/ScrambleImagesTable.jsx","components/Loading.jsx","components/GenerateScrambles.jsx","util/result.util.js","components/Result.js","components/Rank.jsx","components/GenerateRank.jsx","components/Home.jsx","components/NavBar.jsx","components/About.jsx","constants/axis.constants.js","util/move.util.js","components/ScrambleImage.jsx","model/Niss.js","util/niss.util.js","model/Permutation.js","constants/sticker.constants.js","model/Cube.js","components/EOFinder.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","getFmcScrambles","n","url","URL","baseUrl","searchParams","append","fetch","href","ScrambleImagesTable","state","copiedToClipboardIndex","image3d","setCopiedToClipboard","i","setState","scramble","document","createElement","body","appendChild","value","props","scrambles","select","execCommand","removeChild","handleImage3d","this","Fragment","length","className","type","onClick","id","htmlFor","map","key","e","event","visualization","Component","Loading","role","GenerateScrambles","numberOfScrambles","loading","error","handleNumberOfScramblesChange","target","handleClick","preventDefault","setLoading","then","response","json","data","catch","console","log","setError","flag","required","onChange","min","avg","list","trim","Infinity","copy","sort","sum","isNaN","Number","getConsecutiveValids","line","out","array","split","part","isValidResult","push","isValidLine","result","match","isDigit","toUpperCase","outputFormat","isFinite","toFixed","Result","results","name","single","best","compareResults","a","b","woajStyle","fontWeight","backgroundColor","positionStyle","dnfStyle","dnsStyle","Rank","filter","attempts","validLine","join","getName","woaj","Set","x","woajs","r","woajMean","woajMeanList","resultWidth","resultStyle","width","columns","posStyle","nameStyle","numberOfLines","Math","ceil","sortedWoajs","woajsToTrim","slice","tfoot","style","parenthesis","indexInWoajsToTrim","indexOf","splice","toPrint","tableClass","Array","from","_","k","apply","j","dataIndex","sortedResults","resultsToTrim","resultsAvg","woajAvgIndex","meanStyle","woajIndex","indexInResultsToTrim","getMaxTrim","max","floor","GenerateRank","content","handleAttemptsChange","handleContentChange","handleShrinkData","forEach","handleGenerate","handleReset","handleColumnsChange","handleTrimChange","placeholder","rows","Home","NavBar","Navbar","bg","expand","variant","to","baseLink","src","require","height","alt","Toggle","aria-controls","Collapse","Nav","rankLink","scrambleLink","scrambleImageLink","eOFinderLink","aboutLink","About","AXIS","UD_AXIS","RL_AXIS","FB_AXIS","isValid","isValidMove","reduce","isFaceMove","move","isValidGeneralMove","isValidSingleMove","includes","areValidMoves","moves","extractFace","areParallel","move1","move2","face1","face2","Error","willChangeEo","lastMove","axis","willChangeUDEo","willChangeRLEo","willChangeFBEo","willChangeEoFace","face","isDouble","lastChar","invertMove","isPrime","ScrambleImage","validScrambles","Niss","preMoves","cube","c","Cube","applyMoves","invert","applyCubeState","breakEoOnAxis","firstNiss","nissPointForEO","nissPoint","inverseMoves","normalMoves","niss","Permutation","permutations","U_EDGES_1","U_EDGES_2","F_EDGES_1","F_EDGES_2","D_EDGES_1","D_EDGES_2","B_EDGES_1","B_EDGES_2","U_CORNERS_1","D_CORNERS_1","UD_GOOD","UD_BAD","FB_GOOD","FB_BAD","RL_GOOD","RL_BAD","U_MOVE","R_MOVE","F_MOVE","D_MOVE","L_MOVE","B_MOVE","STICKERS","keys","applyMove","modifier","distance","applyMoveWithDistance","permutation","perm","sequence","goodEdges","getGoodEdgesIndex","badEdges","getBadEdgesIndex","goodColors","getGoodColors","badColors","getBadColors","color","shortToFace","attachedColor","size","eoMoves","pow","ALLOWED_MOVES","currentMoves","makeNumberIntoMoves","isOriented","oppositeColorsFB","oppositeColorsUD","oppositeColorsRL","FACE_SIZE","index","unshift","uColor","rColor","fColor","dColor","lColor","bColor","FACE_ORDER","FACES","EOFinder","maxMoves","eoList","eosLeft","loaded","handleScrambleChange","handleMaxMovesChange","handleSubmit","Object","eoMovesLimit","applySequence","setTimeout","getEoList","scrambleIsValid","eosFound","getSize","title","onSubmit","disabled","scope","scioe","eo","toString","App","basename","exact","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.22eacee8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b43c69b5.svg\";","const baseUrl = \"https://scramble-web-api.herokuapp.com\";\n//const baseUrl = \"http://localhost:2020\";\nconst scrambleEndpoint = \"/scramble\";\n\nexport const getFmcScrambles = (n) => {\n  let url = new URL(baseUrl + scrambleEndpoint + \"/333fm\");\n  url.searchParams.append(\"numberOfScrambles\", n);\n\n  return fetch(url.href);\n};\n","import React, { Component } from \"react\";\nimport { ScrambleDisplay } from \"scramble-display\"; // Actually, this is used\n\nclass ScrambleImagesTable extends Component {\n  state = { copiedToClipboardIndex: null, image3d: false };\n\n  setCopiedToClipboard = (i) => {\n    this.setState({ ...this.state, copiedToClipboardIndex: i });\n\n    // Copy to clipboard\n    var scramble = document.createElement(\"textarea\");\n    document.body.appendChild(scramble);\n    scramble.value = i + 1 + \". \" + this.props.scrambles[i];\n    scramble.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(scramble);\n  };\n\n  handleImage3d = () => {\n    this.setState({ ...this.state, image3d: !this.state.image3d });\n  };\n\n  render() {\n    if (!this.props.scrambles) {\n      return null;\n    }\n\n    return (\n      <React.Fragment>\n        {this.props.scrambles.length > 0 && (\n          <div className=\"row\">\n            <div className=\"col-6 text-left text-muted\">\n              You can click to copy\n            </div>\n            <div className=\"form-check col-6 text-right\">\n              <input\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                value={this.state.image3d}\n                onClick={this.handleImage3d}\n                id=\"image3dcheck\"\n              />\n              <label className=\"form-check-label\" htmlFor=\"image3dcheck\">\n                3D image\n              </label>\n            </div>\n          </div>\n        )}\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <table className=\"table table-condensed\">\n              <tbody>\n                {this.props.scrambles.map((scramble, i) => {\n                  return (\n                    <tr key={i}>\n                      <td\n                        className=\"align-middle\"\n                        onClick={(e) => this.setCopiedToClipboard(i)}\n                      >\n                        <div className=\"row text-center\">{`${\n                          i + 1\n                        }. ${scramble}`}</div>\n                        <div className=\"row text-right text-muted\">\n                          &nbsp;\n                          {this.state.copiedToClipboardIndex === i\n                            ? \"Copied\"\n                            : \"\"}\n                        </div>\n                      </td>\n                      <td className=\"text-left\">\n                        <scramble-display\n                          event=\"333\"\n                          scramble={scramble}\n                          visualization={this.state.image3d ? \"3D\" : \"2D\"}\n                        />\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ScrambleImagesTable;\n","import React from \"react\";\n\nconst Loading = () => (\n  <div className=\"spinner-border\" role=\"status\">\n    <span className=\"sr-only\">Loading...</span>\n  </div>\n);\n\nexport default Loading;\n","import React, { Component } from \"react\";\nimport { getFmcScrambles } from \"../api/scramble.web.api\";\nimport ScrambleImagesTable from \"./ScrambleImagesTable\";\nimport Loading from \"./Loading\";\n\nclass GenerateScrambles extends Component {\n  state = {\n    scrambles: [], // Put scrambles here for making developing quicker\n    numberOfScrambles: 3,\n    loading: false,\n    error: \"\",\n    image3d: false,\n    copiedToClipboardIndex: null,\n  };\n\n  handleNumberOfScramblesChange = (e) => {\n    this.setState({ ...this.state, numberOfScrambles: e.target.value });\n  };\n\n  handleClick = (e) => {\n    e.preventDefault();\n    this.setLoading(true);\n    getFmcScrambles(this.state.numberOfScrambles)\n      .then((response) => response.json())\n      .then((data) =>\n        this.setState({\n          ...this.state,\n          scrambles: data.scrambles,\n          loading: false,\n          error: \"\",\n          copiedToClipboardIndex: null, // In case there was a coppied scramble and we generate more\n        })\n      )\n      .catch((error) => {\n        console.log(error);\n        this.setLoading(false);\n        this.setError(\"Error while generating scrambles.\");\n      });\n  };\n\n  setLoading = (flag) => {\n    this.setState({ ...this.state, loading: flag });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h3>Generate new Scrambles</h3>\n          </div>\n        </div>\n        <form className=\"row justify-content-center\">\n          <div className=\"col-6\">\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">Number of Scrambles</span>\n              </div>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                required\n                value={this.state.numberOfScrambles}\n                onChange={(e) => this.handleNumberOfScramblesChange(e)}\n                min={1}\n              />\n            </div>\n            <div className=\"btn-group m-2\" role=\"group\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-group btn-primary\"\n                onClick={this.handleClick}\n              >\n                Generate Scrambles\n              </button>\n            </div>\n          </div>\n        </form>\n        {this.state.loading && <Loading />}\n        {!!this.state.error && (\n          <div className=\"row m-3\">\n            <div className=\"col-12\">\n              <div className=\"bg-danger text-white\">\n                <span>{this.state.error}</span>\n              </div>\n            </div>\n          </div>\n        )}\n        <ScrambleImagesTable scrambles={this.state.scrambles} />\n      </div>\n    );\n  }\n}\n\nexport default GenerateScrambles;\n","export function avg(list, trim) {\n  if (list.length === 0) return Infinity;\n\n  let copy = [...list];\n  copy.sort();\n\n  let sum = 0;\n  for (var i = trim; i < copy.length - trim; i++) {\n    if (isNaN(copy[i])) return Infinity;\n    sum += Number(copy[i]);\n  }\n\n  return sum / (copy.length - 2 * trim);\n}\n\nexport function single(list) {\n  var best = Infinity;\n\n  for (var i = 0; i < list.length; i++) {\n    if (!isNaN(list[i]) && Number(list[i]) < best) {\n      best = Number(list[i]);\n    }\n  }\n  return best;\n}\n\nexport function getConsecutiveValids(line, n) {\n  var out = [];\n  var array = line.split(/[ ,=()]+/);\n  for (var i = 0; i < array.length; i++) {\n    var part = array[i];\n    if (isValidResult(part)) {\n      out.push(part);\n    } else {\n      out = [];\n    }\n    if (out.length === n) {\n      return out;\n    }\n  }\n  return out;\n}\n\nexport function isValidLine(line, n) {\n  return getConsecutiveValids(line, n).length === n;\n}\n\nexport function isValidResult(result) {\n  // We accept as valid any integer > 0, also DNF and DNS.\n  if (isDigit(result)) return true;\n  if (result.toUpperCase() === \"DNF\") return true;\n  if (result.toUpperCase() === \"DNS\") return true;\n  return false;\n}\n\nexport function isDigit(result) {\n  return (\"\" + result).match(/[0-9]+/);\n}\n\nexport function getName(validLine) {\n  var out = [];\n  var array = validLine.split(/[ ,=]+/);\n  for (var i = 0; i < array.length; i++) {\n    var part = array[i];\n    if (!isValidResult(part)) {\n      out.push(part);\n    } else {\n      break;\n    }\n  }\n  return out.join(\" \");\n}\n\nexport function outputFormat(result) {\n  if (!isNaN(result)) {\n    if (isFinite(result)) {\n      return result.toFixed(2);\n    } else {\n      return \"DNF\";\n    }\n  }\n  if (result.toUpperCase() === \"DNF\") {\n    return \"DNF\";\n  }\n  if (result.toUpperCase() === \"DNS\") {\n    return \"DNS\";\n  }\n}\n","import { avg, single } from \"../util/result.util\";\n\nexport class Result {\n  constructor(results, name, trim) {\n    this.avg = avg(results, trim);\n    this.single = single(results);\n    this.results = results;\n    this.name = name;\n  }\n}\n\nexport function compareResults(a, b) {\n  if (a.avg < b.avg) {\n    return -1;\n  }\n  if (a.avg > b.avg) {\n    return 1;\n  }\n  if (a.single < b.single) {\n    return -1;\n  }\n  if (a.single > b.single) {\n    return 1;\n  }\n  return 0;\n}\n","import React, { Component } from \"react\";\nimport {\n  getName,\n  getConsecutiveValids,\n  isValidLine,\n  outputFormat,\n  avg,\n} from \"../util/result.util\";\nimport { Result, compareResults } from \"./Result\";\n\nconst woajStyle = [\n  { fontWeight: \"bold\", backgroundColor: \"rgb(255, 204, 0)\" },\n  { fontWeight: \"bold\", backgroundColor: \"rgb(180, 180, 180)\" },\n  { fontWeight: \"bold\", backgroundColor: \"rgb(230, 77, 0)\" },\n];\n\nconst positionStyle = {\n  backgroundColor: \"rgb(57, 181, 90)\",\n};\n\nconst dnfStyle = {\n  backgroundColor: \"rgb(230, 0, 0)\",\n};\n\nconst dnsStyle = {\n  backgroundColor: \"rgb(0, 138, 230)\",\n};\n\nclass Rank extends Component {\n  render() {\n    let trim = this.props.trim;\n\n    // Clear results and sort by avg then single\n    let data = this.props.data\n      .filter((line) => isValidLine(line, this.props.attempts))\n      .map((line) => {\n        let name = getName(line);\n        let results = getConsecutiveValids(line, this.props.attempts);\n        return new Result(results, name, trim);\n      })\n      .sort(compareResults);\n\n    if (data.length === 0) {\n      return null;\n    }\n\n    // Woajs for formatting\n    let woaj = []; // List of lists with ordered results\n    for (let i = 0; i < this.props.attempts; i++) {\n      woaj.push(\n        [...new Set(data.map((result) => result.results[i]))]\n          .filter((x) => !isNaN(x)) // This prevents DNF, DNS from being tagged as woaj\n          .sort()\n      );\n    }\n    let woajs = woaj.map((r) => r[0]); // Best result of each attempt\n    let woajMean = avg(woajs, trim); // Mean of the best results\n\n    // Ordered list with all woajs\n    let woajMeanList = [...new Set(data.map((result) => result.avg))]\n      .filter((x) => isFinite(x)) // Prevents DNF, DNS from being tagged as woaj\n      .sort();\n\n    // Fixed style\n    let resultWidth = 50.0 / (this.props.attempts + 1); // +1 for mean\n    let posWidth = 50 * 0.2;\n    let nameWidth = 50 - posWidth;\n\n    let resultStyle = { width: `${resultWidth / this.props.columns}%` };\n    let posStyle = { width: `${posWidth / this.props.columns}%` };\n    let nameStyle = { width: `${nameWidth / this.props.columns}%` };\n\n    let numberOfLines = Math.ceil(data.length / this.props.columns);\n\n    let sortedWoajs = [...woajs].sort();\n    let woajsToTrim = [\n      ...sortedWoajs.slice(0, trim),\n      ...sortedWoajs.slice(sortedWoajs.length - trim, sortedWoajs.length),\n    ];\n\n    // Using this we can detach tfoot in case of multiple columns\n    let tfoot = (\n      <tfoot>\n        <tr style={woajStyle[0]}>\n          {this.props.columns === 1 && <th />}\n          <th>Woaj</th>\n          {woajs.map((r, i) => {\n            let parenthesis = false;\n            let indexInWoajsToTrim = woajsToTrim.indexOf(r);\n            if (indexInWoajsToTrim >= 0) {\n              parenthesis = true;\n              woajsToTrim.splice(indexInWoajsToTrim, 1);\n            }\n            let toPrint = r || \"-\"; // Prevents all DNF from being blank\n\n            return <th key={i}>{parenthesis ? `(${toPrint})` : toPrint}</th>;\n          })}\n          <th style={woajStyle[0]}>{outputFormat(woajMean)}</th>\n        </tr>\n      </tfoot>\n    );\n\n    let tableClass = \"table table-condensed table-bordered m-0 p-0\";\n\n    return (\n      <React.Fragment>\n        <table className={tableClass}>\n          <thead className=\"bg-dark text-white\">\n            <tr>\n              {Array.from({ length: this.props.columns }).map((_, k) => {\n                return (\n                  <React.Fragment key={k}>\n                    <th style={posStyle}>Pos</th>\n                    <th style={nameStyle}>Name</th>\n                    {[\n                      ...Array.apply(null, { length: this.props.attempts }),\n                    ].map((_, i) => (\n                      <th key={i} style={resultStyle}>{`R${i + 1}`}</th>\n                    ))}\n                    <th style={resultStyle}>{trim === 0 ? \"Mean\" : \"Avg\"}</th>\n                  </React.Fragment>\n                );\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {Array.from({ length: numberOfLines }).map((_, i) => {\n              return (\n                <tr key={i}>\n                  {Array.from({ length: this.props.columns }).map((_, j) => {\n                    let dataIndex = j * numberOfLines + i;\n                    if (dataIndex >= data.length) {\n                      return null;\n                    }\n                    let result = data[dataIndex];\n\n                    let sortedResults = [...result.results].sort();\n                    let resultsToTrim = [\n                      ...sortedResults.slice(0, trim),\n                      ...sortedResults.slice(\n                        sortedResults.length - trim,\n                        sortedResults.length\n                      ),\n                    ];\n\n                    let resultsAvg = result.avg;\n                    let woajAvgIndex = woajMeanList.indexOf(resultsAvg);\n                    let meanStyle = {};\n                    if (woajAvgIndex < woajStyle.length) {\n                      meanStyle = woajStyle[woajAvgIndex];\n                    }\n                    return (\n                      <React.Fragment key={j}>\n                        <th style={positionStyle}>\n                          {dataIndex === 0 || // Print \"-\"\" in case of ties\n                          compareResults(\n                            data[dataIndex],\n                            data[dataIndex - 1]\n                          ) !== 0\n                            ? dataIndex + 1\n                            : \"-\"}\n                        </th>\n                        <td>{result.name}</td>\n                        {result.results.map((r, k) => {\n                          let woajIndex = woaj[k].indexOf(r);\n                          let style = {};\n\n                          // Print with parenthesis if ignored during the average\n                          let parenthesis = false;\n                          let indexInResultsToTrim = resultsToTrim.indexOf(r);\n                          if (indexInResultsToTrim >= 0) {\n                            parenthesis = true;\n                            resultsToTrim.splice(indexInResultsToTrim, 1);\n                          }\n\n                          if (r.toUpperCase() === \"DNF\") {\n                            style = dnfStyle;\n                          } else if (r.toUpperCase() === \"DNS\") {\n                            style = dnsStyle;\n                          } else if (woajIndex < woajStyle.length) {\n                            style = woajStyle[woajIndex];\n                          }\n                          return (\n                            <td key={k} style={style}>\n                              {parenthesis ? `(${r})` : r}\n                            </td>\n                          );\n                        })}\n                        <td style={meanStyle}>{outputFormat(result.avg)}</td>\n                      </React.Fragment>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n          {this.props.columns === 1 && tfoot}\n        </table>\n        {this.props.columns > 1 && (\n          <table className={tableClass}>{tfoot}</table>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Rank;\n","import React, { Component } from \"react\";\nimport { isValidLine } from \"../util/result.util\";\nimport Rank from \"./Rank\";\n\nconst getMaxTrim = (n) => Math.max(0, Math.floor((n - 1) / 2));\n\nclass GenerateRank extends Component {\n  /*componentDidMount() {\n    // simulates a click to generate. Helps developing\n    let f = () => null;\n    this.handleGenerate({ preventDefault: f });\n  }*/\n\n  state = {\n    attempts: 3,\n    columns: 1,\n    trim: 0,\n    data: [],\n    content: ``, // Paste the raw data here for developing\n  };\n\n  handleAttemptsChange = (e) => {\n    let attempts = Number(e.target.value);\n    this.setState({\n      ...this.state,\n      attempts: attempts,\n      trim: Math.min(this.state.trim, getMaxTrim(attempts)), // In case we change attempts, we update trim\n    });\n  };\n\n  handleContentChange = (e) => {\n    this.setState({ ...this.state, content: e.target.value });\n  };\n\n  handleShrinkData = () => {\n    let out = [];\n    this.state.content.split(\"\\n\").forEach((line) => {\n      if (isValidLine(line, this.state.attempts)) {\n        out.push(line.trim());\n      }\n    });\n\n    // Change the raw content to the valid one\n    this.setState({ ...this.state, content: out.join(\"\\n\") });\n  };\n\n  handleGenerate = (e) => {\n    e.preventDefault();\n    this.handleShrinkData();\n\n    // Split the content into lines to generate\n    this.setState({ ...this.state, data: this.state.content.split(\"\\n\") });\n  };\n\n  handleReset = () => {\n    this.setState({ ...this.state, content: \"\" });\n  };\n\n  handleColumnsChange = (e) => {\n    this.setState({ ...this.state, columns: Number(e.target.value) });\n  };\n\n  handleTrimChange = (e) => {\n    this.setState({ ...this.state, trim: Number(e.target.value) });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h3>Generate Rank</h3>\n          </div>\n        </div>\n        <form>\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"input-group\">\n                <textarea\n                  className=\"form-control\"\n                  value={this.state.content}\n                  onChange={this.handleContentChange}\n                  placeholder=\"Raw content\"\n                  required\n                  rows=\"8\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"row justify-content-center\">\n            <div className=\"col-sm-10\">\n              <div className=\"btn-group m-2\" role=\"group\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-group btn-success\"\n                  onClick={this.handleGenerate}\n                >\n                  Generate\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"btn btn-group btn-primary\"\n                  onClick={this.handleShrinkData}\n                >\n                  Shrink Data\n                </button>\n                <button\n                  type=\"reset\"\n                  className=\"btn btn-group btn-warning\"\n                  onClick={this.handleReset}\n                >\n                  Reset\n                </button>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-group mb-3\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">Attempts</span>\n                </div>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  required\n                  value={this.state.attempts}\n                  onChange={this.handleAttemptsChange}\n                  min={1}\n                />\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">Columns</span>\n                </div>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  required\n                  value={this.state.columns}\n                  onChange={this.handleColumnsChange}\n                  min={1}\n                />\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">Trim</span>\n                </div>\n                <input\n                  type=\"number\"\n                  className=\"form-control\"\n                  required\n                  value={this.state.trim}\n                  onChange={this.handleTrimChange}\n                  min={0}\n                  max={getMaxTrim(this.state.attempts)}\n                />\n              </div>\n            </div>\n          </div>\n        </form>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-12\">\n            <Rank\n              attempts={this.state.attempts}\n              data={this.state.data}\n              columns={this.state.columns}\n              trim={this.state.trim}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GenerateRank;\n","import React from \"react\";\nimport GenerateRank from \"./GenerateRank\";\nimport GenerateScrambles from \"./GenerateScrambles\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <GenerateRank />\n        </div>\n      </div>\n      <br />\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <GenerateScrambles />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = (props) => {\n  return (\n    <Navbar bg=\"primary\" expand=\"lg\" variant=\"dark\" className=\"sticky-top\">\n      <Link to={props.baseLink}>\n        <img\n          src={require(\"../assets/logo.svg\")}\n          width=\"30\"\n          height=\"30\"\n          className=\"d-inline-block align-top text-white\"\n          alt=\"Logo\"\n        />\n      </Link>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Link className=\"text-white m-2\" to={props.rankLink}>\n            Rank\n          </Link>\n          <Link className=\"text-white m-2\" to={props.scrambleLink}>\n            Scramble\n          </Link>\n          <Link className=\"text-white m-2\" to={props.scrambleImageLink}>\n            Image\n          </Link>\n          <Link className=\"text-white m-2\" to={props.eOFinderLink}>\n            EO Finder\n          </Link>\n          <Link className=\"text-white m-2\" to={props.aboutLink}>\n            About\n          </Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst About = () => (\n  <div className=\"container\">\n    <div className=\"row\">\n      <div className=\"col-12\">\n        <h3>About</h3>\n      </div>\n    </div>\n\n    <div className=\"text-justify\">\n      <p>\n        This project is open source and you can contribute{\" \"}\n        <a href=\"https://github.com/campos20/fmc-ranks/\">here</a>.\n      </p>\n      <p>\n        At first, this was created to generate FMC ranks only, then it slowly\n        became a multi-purpose FMC project\n      </p>\n    </div>\n  </div>\n);\nexport default About;\n","const AXIS = {\n  UD_AXIS: \"UD_AXIS\",\n  RL_AXIS: \"RL_AXIS\",\n  FB_AXIS: \"FB_AXIS\",\n};\n\nexport default AXIS;\n","import AXIS from \"../constants/axis.constants\";\n\nconst UD = \"UD\";\nconst RL = \"RL\";\nconst FB = \"FB\";\nconst PRIME = \"'\";\n\n// TODO find a better way to validate scrambles\n// I'm sure I'm not the first who needs it\n\nexport const isValid = (scramble) => {\n  return scramble\n    .trim()\n    .split(\" \")\n    .map(isValidMove)\n    .reduce((a, b) => a && b, true);\n};\n\nconst allowedMoves = \"UFRDLB\";\nconst allowedModifiers = \"'2\";\nconst allowedSlices = \"MSE\";\nconst allowedRotations = \"xyz\";\n\nconst isValidGeneralMove = (move) => {\n  if (!move) {\n    return false;\n  }\n\n  if (move.length === 0 || move.length > 3) {\n    return false;\n  }\n\n  return true;\n};\n\nconst isFaceMove = (move) => {\n  if (move.length === 1) {\n    return allowedMoves.indexOf(move) >= 0;\n  }\n\n  if (move.length === 2) {\n    return (\n      allowedMoves.indexOf(move[0]) >= 0 &&\n      allowedModifiers.indexOf(move[1]) >= 0\n    );\n  }\n\n  return false;\n};\n\nexport const isValidFaceMoves = (sequence) => {\n  return sequence\n    .trim()\n    .split(\" \")\n    .map(isFaceMove)\n    .reduce((a, b) => a && b, true);\n};\n\nconst isValidMove = (move) => {\n  if (!isValidGeneralMove(move)) {\n    return false;\n  }\n\n  if (move.length === 1 && !isValidSingleMove(move)) {\n    return false;\n  }\n\n  if (move.length === 2) {\n    if (!isValidSingleMove(move[0])) {\n      return false;\n    }\n    if (!allowedModifiers.includes(move[1]) && move[1] !== \"w\") {\n      return false;\n    }\n  }\n\n  // Uw'\n  if (move.length === 3) {\n    if (move[1] !== \"w\") {\n      return false;\n    }\n    if (!allowedModifiers.includes(move[2])) {\n      return false;\n    }\n    if (!isValidSingleMove(move[0])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n// moved.length === 1\nconst isValidSingleMove = (move) =>\n  allowedMoves.includes(move) ||\n  allowedRotations.includes(move) ||\n  allowedSlices.includes(move);\n\n// Avoid U U2 or U D U2 on sequence\nexport const areValidMoves = (moves) => {\n  // Check for U U2\n  for (let i = 1; i < moves.length; i++) {\n    if (extractFace(moves[i]) === extractFace(moves[i - 1])) {\n      return false;\n    }\n  }\n\n  // Check for R L2 R'\n  for (let i = 2; i < moves.length; i++) {\n    if (\n      areParallel(moves[i], moves[i - 1]) &&\n      areParallel(moves[i - 1], moves[i - 2])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nexport const areParallel = (move1, move2) => {\n  let face1 = extractFace(move1);\n  let face2 = extractFace(move2);\n\n  if (UD.indexOf(face1) >= 0) {\n    return UD.indexOf(face2) >= 0;\n  }\n\n  if (RL.indexOf(face1) >= 0) {\n    return RL.indexOf(face2) >= 0;\n  }\n\n  if (FB.indexOf(face1) >= 0) {\n    return FB.indexOf(face2) >= 0;\n  }\n\n  throw new Error(\"Not mapped moves\");\n};\n\nconst extractFace = (move) => move[0];\n\nexport const willChangeEo = (lastMove, axis) => {\n  switch (axis) {\n    case AXIS.UD_AXIS:\n      return willChangeUDEo(lastMove);\n    case AXIS.RL_AXIS:\n      return willChangeRLEo(lastMove);\n    default:\n      // FB\n      return willChangeFBEo(lastMove);\n  }\n};\n\nconst willChangeFBEo = (lastMove) => {\n  return willChangeEoFace(lastMove, \"F\", \"B\");\n};\n\nconst willChangeUDEo = (lastMove) => {\n  return willChangeEoFace(lastMove, \"U\", \"D\");\n};\n\nconst willChangeRLEo = (lastMove) => {\n  return willChangeEoFace(lastMove, \"R\", \"L\");\n};\n\nconst willChangeEoFace = (lastMove, face1, face2) => {\n  let face = extractFace(lastMove);\n  if (face !== face1 && face !== face2) {\n    return false;\n  }\n  return !isDouble(lastMove);\n};\n\nconst isDouble = (move) => lastChar(move) === \"2\";\n\nconst lastChar = (move) => move[move.length - 1];\n\nexport const invert = (moves) => {\n  let result = [];\n  for (let i = moves.length - 1; i >= 0; i--) {\n    result.push(invertMove(moves[i]));\n  }\n  return result;\n};\n\nconst invertMove = (move) => {\n  if (isDouble(move)) return move;\n\n  return \"\" + move[0] + (isPrime(move) ? \"\" : PRIME);\n};\n\nconst isPrime = (move) => lastChar(move) === PRIME;\n","import React, { Component } from \"react\";\nimport ScrambleImagesTable from \"./ScrambleImagesTable\";\nimport { isValid } from \"../util/move.util\";\n\nclass ScrambleImage extends Component {\n  state = { content: \"\", validScrambles: [] };\n\n  handleContentChange = (e) => {\n    this.setState({ ...this.state, content: e.target.value });\n  };\n\n  handleClick = () => {\n    let validScrambles = this.state.content.split(\"\\n\").filter(isValid);\n    this.setState({ ...this.state, validScrambles });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h3 className=\"p-2\">Generate Scramble Images</h3>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"input-group\">\n              <textarea\n                className=\"form-control\"\n                value={this.state.content}\n                onChange={this.handleContentChange}\n                placeholder=\"Place scrambles 1 each line\"\n                required\n                rows=\"8\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"btn-group m-2\" role=\"group\">\n          <button\n            className=\"btn btn-group btn-primary\"\n            onClick={this.handleClick}\n          >\n            Generate Images\n          </button>\n        </div>\n        <ScrambleImagesTable scrambles={this.state.validScrambles} />\n      </div>\n    );\n  }\n}\n\nexport default ScrambleImage;\n","import Cube from \"./Cube\";\nimport { areValidMoves } from \"../util/move.util\";\nimport { invert, areParallel } from \"../util/move.util\";\n\nexport default class Niss {\n  constructor(preMoves, moves) {\n    this.preMoves = preMoves;\n    this.moves = moves;\n  }\n\n  apply(cube) {\n    let c = new Cube();\n\n    c.applyMoves(invert(this.preMoves));\n    c.applyCubeState(cube.state);\n    c.applyMoves(this.moves);\n\n    return c;\n  }\n\n  toString() {\n    let result = [];\n    result.push(this.moves.join(\" \"));\n    if (this.preMoves.length !== 0) {\n      result.push(\"(\" + this.preMoves.join(\" \") + \")\");\n    }\n\n    return result.join(\" \");\n  }\n\n  isValid() {\n    if (!areValidMoves(this.moves)) {\n      return false;\n    }\n\n    if (!areValidMoves(this.preMoves)) {\n      return false;\n    }\n\n    // Since this is used just for EO checking, we exclude B2 F\n    if (\n      this.moves.length > 1 &&\n      areParallel(\n        this.moves[this.moves.length - 1],\n        this.moves[this.moves.length - 2]\n      )\n    ) {\n      return false;\n    }\n\n    if (\n      this.preMoves.length > 1 &&\n      areParallel(\n        this.preMoves[this.preMoves.length - 1],\n        this.preMoves[this.preMoves.length - 2]\n      )\n    ) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getSize() {\n    return this.moves.length + this.preMoves.length;\n  }\n}\n","import { willChangeEo } from \"./move.util\";\nimport Niss from \"../model/Niss\";\n\nconst breakEoOnAxis = (moves, axis) => {\n  let result = [];\n\n  // In case the last move won't change EO, we return empty list\n  if (!willChangeEo(moves[moves.length - 1], axis)) {\n    return result;\n  }\n\n  let firstNiss = new Niss([], moves);\n  result.push(firstNiss);\n\n  let nissPointForEO = [];\n  for (let j = 0; j < moves.length; j++) {\n    if (willChangeEo(moves[j], axis)) {\n      nissPointForEO.push(j);\n    }\n  }\n\n  for (let j = 0; j < nissPointForEO.length; j++) {\n    let nissPoint = nissPointForEO[j] + 1;\n\n    let inverseMoves = moves.slice(0, nissPoint);\n    let normalMoves = moves.slice(nissPoint, moves.length);\n\n    let niss = new Niss(inverseMoves, normalMoves);\n    result.push(niss);\n  }\n\n  return result.filter((niss) => niss.isValid());\n};\n\nexport default breakEoOnAxis;\n","/**\n * Mathematical permutation\n * [(1, 2), (4, 6, 8)]\n *\n */\nexport default class Permutation {\n  constructor(permutations) {\n    this.permutations = permutations;\n  }\n}\n","import Permutation from \"../model/Permutation\";\n\nexport const U_FACE = [0, 1, 2, 3, 4, 5, 6, 7, 8];\nexport const R_FACE = [9, 10, 11, 12, 13, 14, 15, 16, 17];\nexport const F_FACE = [18, 19, 20, 21, 22, 23, 24, 25, 26];\nexport const D_FACE = [27, 28, 29, 30, 31, 32, 33, 34, 35];\nexport const L_FACE = [36, 37, 38, 39, 40, 41, 42, 43, 44];\nexport const B_FACE = [45, 46, 47, 48, 49, 50, 51, 52, 53];\n\nexport const UD_FACES = [U_FACE, D_FACE];\nexport const RL_FACES = [R_FACE, L_FACE];\nexport const FB_FACES = [F_FACE, B_FACE];\n\nexport const U_EDGES_1 = [1, 5, 7, 3];\nexport const U_EDGES_2 = [46, 10, 19, 37]; // Attached to the previous\n\nexport const R_EDGES_1 = [10, 14, 16, 12];\nexport const R_EDGES_2 = [5, 48, 32, 23];\n\nexport const F_EDGES_1 = [19, 23, 25, 21];\nexport const F_EDGES_2 = [7, 12, 28, 41];\n\nexport const D_EDGES_1 = [28, 32, 34, 30];\nexport const D_EDGES_2 = [25, 16, 52, 43];\n\nexport const L_EDGES_1 = [37, 41, 43, 39];\nexport const L_EDGES_2 = [3, 21, 30, 50];\n\nexport const B_EDGES_1 = [46, 50, 52, 48];\nexport const B_EDGES_2 = [1, 39, 34, 14];\n\nexport const U_CORNERS_1 = [0, 2, 8, 6];\nexport const U_CORNERS_2 = [36, 45, 9, 18];\nexport const U_CORNERS_3 = [47, 11, 20, 38];\n\nexport const R_CORNERS_1 = [9, 11, 17, 15];\nexport const R_CORNERS_2 = [20, 2, 51, 29];\nexport const R_CORNERS_3 = [8, 45, 35, 26];\n\nexport const F_CORNERS_1 = [18, 20, 26, 24];\nexport const F_CORNERS_2 = [38, 8, 15, 27];\nexport const F_CORNERS_3 = [6, 9, 29, 44];\n\nexport const D_CORNERS_1 = [27, 29, 35, 33];\nexport const D_CORNERS_2 = [44, 26, 17, 53];\nexport const D_CORNERS_3 = [24, 15, 51, 42];\n\nexport const L_CORNERS_1 = [36, 38, 44, 42];\nexport const L_CORNERS_2 = [47, 6, 24, 33];\nexport const L_CORNERS_3 = [0, 18, 27, 53];\n\nexport const B_CORNERS_1 = [45, 47, 53, 51];\nexport const B_CORNERS_2 = [11, 0, 42, 35];\nexport const B_CORNERS_3 = [2, 36, 33, 17];\n\n// For EO\nexport const UD_SLICE_1 = [3, 5, 30, 32];\nexport const UD_SLICE_2 = [37, 10, 43, 16];\n\nexport const RL_SLICE_1 = [12, 14, 39, 41];\nexport const RL_SLICE_2 = [23, 48, 50, 21];\n\nexport const FB_SLICE_1 = [21, 23, 48, 50];\nexport const FB_SLICE_2 = [41, 12, 14, 39];\n\nexport const UD_GOOD = [F_EDGES_1, B_EDGES_1, UD_SLICE_1];\nexport const UD_BAD = [F_EDGES_2, B_EDGES_2, UD_SLICE_2];\n\nexport const FB_GOOD = [U_EDGES_1, D_EDGES_1, FB_SLICE_1];\nexport const FB_BAD = [U_EDGES_2, D_EDGES_2, FB_SLICE_2];\n\nexport const RL_GOOD = [U_EDGES_1, D_EDGES_1, RL_SLICE_1];\nexport const RL_BAD = [U_EDGES_2, D_EDGES_2, RL_SLICE_2];\n\nexport const UD_CORNERS = [U_CORNERS_1, D_CORNERS_1];\n\nexport const U_MOVE = new Permutation([\n  U_EDGES_1,\n  U_EDGES_2,\n  U_CORNERS_1,\n  U_CORNERS_2,\n  U_CORNERS_3,\n]);\n\nexport const R_MOVE = new Permutation([\n  R_EDGES_1,\n  R_EDGES_2,\n  R_CORNERS_1,\n  R_CORNERS_2,\n  R_CORNERS_3,\n]);\n\nexport const F_MOVE = new Permutation([\n  F_EDGES_1,\n  F_EDGES_2,\n  F_CORNERS_1,\n  F_CORNERS_2,\n  F_CORNERS_3,\n]);\n\nexport const D_MOVE = new Permutation([\n  D_EDGES_1,\n  D_EDGES_2,\n  D_CORNERS_1,\n  D_CORNERS_2,\n  D_CORNERS_3,\n]);\n\nexport const L_MOVE = new Permutation([\n  L_EDGES_1,\n  L_EDGES_2,\n  L_CORNERS_1,\n  L_CORNERS_2,\n  L_CORNERS_3,\n]);\n\nexport const B_MOVE = new Permutation([\n  B_EDGES_1,\n  B_EDGES_2,\n  B_CORNERS_1,\n  B_CORNERS_2,\n  B_CORNERS_3,\n]);\n","import breakEoOnAxis from \"../util/niss.util\";\nimport { willChangeEo } from \"../util/move.util\";\n\nimport {\n  U_MOVE,\n  R_MOVE,\n  F_MOVE,\n  D_MOVE,\n  L_MOVE,\n  B_MOVE,\n  UD_GOOD,\n  RL_GOOD,\n  FB_GOOD,\n  UD_BAD,\n  RL_BAD,\n  FB_BAD,\n} from \"../constants/sticker.constants\";\nimport AXIS from \"../constants/axis.constants\";\n\nexport default class Cube {\n  static ALLOWED_MOVES = [\n    \"U2\",\n    \"R2\",\n    \"F2\",\n    \"D2\",\n    \"L2\",\n    \"B2\",\n    \"U'\",\n    \"R'\",\n    \"F'\",\n    \"D'\",\n    \"L'\",\n    \"B'\",\n    \"U\",\n    \"R\",\n    \"F\",\n    \"D\",\n    \"L\",\n    \"B\",\n  ];\n\n  static uColor = 0;\n  static rColor = 1;\n  static fColor = 2;\n  static dColor = 3;\n  static lColor = 4;\n  static bColor = 5;\n\n  static oppositeColorsUD = [Cube.uColor, Cube.dColor];\n  static oppositeColorsRL = [Cube.rColor, Cube.lColor];\n  static oppositeColorsFB = [Cube.fColor, Cube.bColor];\n\n  static FACE_ORDER = \"URFDLB\";\n  static FACE_SIZE = 9; // Each face has 9 stickers\n  static FACES = 6;\n  static STICKERS = Cube.FACE_SIZE * Cube.FACES;\n\n  // Face order: U R F D L B\n  // Each face is written using the reading order\n  // state = [0, ..., 53]\n  state = Array.from(Array(Cube.STICKERS).keys());\n\n  /**\n   * Distance = 1, regular move, distance = 2, double move, distance = -1, counter\n   * clockwise\n   *\n   */\n  applyMoveWithDistance(permutation, distance) {\n    let c = [...this.state];\n    permutation.permutations.forEach((perm) => {\n      let length = perm.length;\n      for (let i = length - 1; i >= 0; i--) {\n        this.state[perm[i]] = c[perm[(i - distance + length) % length]];\n      }\n    });\n  }\n\n  // No checks, but it's ok for now\n  applyMove = (move) => {\n    let face = move[0];\n    let modifier = move[move.length - 1];\n\n    let distance = modifier === \"2\" ? 2 : modifier === \"'\" ? -1 : 1;\n\n    switch (face) {\n      case \"U\": {\n        this.applyMoveWithDistance(U_MOVE, distance);\n        break;\n      }\n      case \"R\": {\n        this.applyMoveWithDistance(R_MOVE, distance);\n        break;\n      }\n      case \"F\": {\n        this.applyMoveWithDistance(F_MOVE, distance);\n        break;\n      }\n      case \"D\": {\n        this.applyMoveWithDistance(D_MOVE, distance);\n        break;\n      }\n      case \"L\": {\n        this.applyMoveWithDistance(L_MOVE, distance);\n        break;\n      }\n      default: {\n        // B\n        this.applyMoveWithDistance(B_MOVE, distance);\n        break;\n      }\n    }\n  };\n\n  // Performs \"R U R' U'\"\n  applySequence(sequence) {\n    sequence.split(\" \").forEach(this.applyMove);\n  }\n\n  // Performs \"[R, U, R', U']\"\n  applyMoves = (moves) => {\n    moves.forEach((move) => {\n      this.applyMove(move);\n    });\n  };\n\n  // No checks in favor of spped, but state.length === cube,length\n  // Apply a cube state into another cube\n  applyCubeState(state) {\n    let c = [...this.state];\n    for (let i = 0; i < this.state.length; i++) {\n      this.state[i] = c[state[i]];\n    }\n  }\n\n  isOriented(axis) {\n    let goodEdges = Cube.getGoodEdgesIndex(axis);\n    let badEdges = Cube.getBadEdgesIndex(axis);\n\n    let goodColors = Cube.getGoodColors(axis);\n    let badColors = Cube.getBadColors(axis);\n\n    for (let i = 0; i < goodEdges.length; i++) {\n      for (let j = 0; j < goodEdges[i].length; j++) {\n        let color = Cube.shortToFace(this.state[goodEdges[i][j]]);\n        let attachedColor = Cube.shortToFace(this.state[badEdges[i][j]]);\n\n        if (color === badColors[0] || color === badColors[1]) {\n          return false;\n        } else if (\n          attachedColor === goodColors[0] ||\n          attachedColor === goodColors[1]\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  static getGoodColors(axis) {\n    switch (axis) {\n      case AXIS.UD_AXIS:\n        return Cube.oppositeColorsFB;\n      case AXIS.RL_AXIS:\n        return Cube.oppositeColorsUD;\n      default:\n        return Cube.oppositeColorsUD;\n    }\n  }\n\n  static getBadColors(axis) {\n    switch (axis) {\n      case AXIS.UD_AXIS:\n        return Cube.oppositeColorsRL;\n      case AXIS.RL_AXIS:\n        return Cube.oppositeColorsFB;\n      default:\n        return Cube.oppositeColorsRL;\n    }\n  }\n\n  static getGoodEdgesIndex(axis) {\n    switch (axis) {\n      case AXIS.UD_AXIS:\n        return UD_GOOD;\n      case AXIS.RL_AXIS:\n        return RL_GOOD;\n      default:\n        return FB_GOOD;\n    }\n  }\n\n  static getBadEdgesIndex(axis) {\n    switch (axis) {\n      case AXIS.UD_AXIS:\n        return UD_BAD;\n      case AXIS.RL_AXIS:\n        return RL_BAD;\n      default:\n        return FB_BAD;\n    }\n  }\n\n  // Faces are 012...8\n  // Each face 0 has stickers 0-8, face 1 has 9-17. We convert this number to its face\n  static shortToFace(c) {\n    return Math.floor(c / this.FACE_SIZE);\n  }\n\n  getEoList(size, axis) {\n    let eoMoves = [];\n\n    // Using the reminder, we can get every possible move sequence\n    for (let i = 0; i < Math.pow(Cube.ALLOWED_MOVES.length, size); i++) {\n      let currentMoves = Cube.makeNumberIntoMoves(i, size);\n\n      let lastMove = currentMoves[currentMoves.length - 1];\n\n      if (!willChangeEo(lastMove, axis)) {\n        continue;\n      }\n\n      breakEoOnAxis(currentMoves, axis).forEach((niss) => {\n        let cube = niss.apply(this);\n        if (cube.isOriented(axis)) {\n          eoMoves.push(niss);\n        }\n      });\n    }\n    return eoMoves;\n  }\n\n  // Helps into generating every possible move sequence up to n moves\n  static makeNumberIntoMoves(n, size) {\n    let result = [];\n    while (result.length < size) {\n      let index = n % this.ALLOWED_MOVES.length;\n      result.unshift(this.ALLOWED_MOVES[index]);\n\n      n = Math.floor(n / this.ALLOWED_MOVES.length);\n    }\n    return result;\n  }\n}\n","import React, { Component } from \"react\";\nimport { isValidFaceMoves } from \"../util/move.util\";\n\nimport Cube from \"../model/Cube\";\nimport AXIS from \"../constants/axis.constants\";\nimport Loading from \"./Loading\";\n\nconst MAX_SOLUTION_SIZE = 6;\n\nclass EOFinder extends Component {\n  state = {\n    maxMoves: \"4\",\n    scramble: \"\",\n    eoList: [],\n    eosLeft: 0,\n    loaded: false,\n  };\n\n  handleScrambleChange = (e) => {\n    this.setState({ ...this.setState, scramble: e.target.value });\n  };\n\n  handleMaxMovesChange = (e) => {\n    this.setState({ ...this.setState, maxMoves: e.target.value });\n  };\n\n  handleSubmit = () => {\n    let keys = Object.keys(AXIS);\n\n    let eoMovesLimit = Number(this.state.maxMoves);\n\n    // Clear EO list for now\n    // We use eosLeft to show a spinner\n    this.setState({\n      ...this.state,\n      eoList: [],\n      eosLeft: keys.length * eoMovesLimit,\n      loaded: false,\n    });\n\n    let cube = new Cube();\n    let scramble = this.state.scramble.trim();\n    cube.applySequence(scramble);\n\n    // TODO handle cube already oriented\n    // We could check if cube.isOriented(axis) and display a F0 or something.\n\n    // Async\n    for (let size = 1; size <= eoMovesLimit; size++) {\n      keys.forEach((axis) =>\n        setTimeout(() => {\n          let eoList = cube.getEoList(size, axis);\n          this.setState({\n            ...this.state,\n            eoList: [...this.state.eoList, ...eoList],\n            eosLeft: this.state.eosLeft - 1,\n            loaded: true,\n          });\n        }, 0)\n      );\n    }\n  };\n\n  render() {\n    let scrambleIsValid = isValidFaceMoves(this.state.scramble);\n    let eoList = this.state.eoList;\n    let eosFound = eoList.length;\n\n    // Sort by solution size.\n    eoList.sort((a, b) => (a.getSize() > b.getSize() ? 1 : -1));\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h3>\n              EO Finder{\" \"}\n              <span\n                className=\"badge badge-pill badge-primary help\"\n                title=\"This is found by brute force and computation is left to your device. It can take long.\"\n              >\n                ?\n              </span>\n            </h3>\n          </div>\n        </div>\n        <form\n          className=\"row justify-content-center\"\n          onSubmit={this.handleSubmit}\n        >\n          <div className=\"col-12\">\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">Scramble</span>\n              </div>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                required\n                value={this.state.scramble}\n                onChange={this.handleScrambleChange}\n                min={1}\n              />\n            </div>\n            <div className=\"input-group mb-3\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">\n                  Maximum number of moves\n                </span>\n              </div>\n              <input\n                type=\"number\"\n                className=\"form-control\"\n                required\n                value={this.state.maxMoves}\n                onChange={this.handleMaxMovesChange}\n                min={1}\n                max={MAX_SOLUTION_SIZE}\n              />\n            </div>\n            <div className=\"btn-group m-2\" role=\"group\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-group btn-primary\"\n                disabled={!scrambleIsValid}\n                title={!scrambleIsValid ? \"Invalid scramble\" : \"\"}\n              >\n                Find EOs\n              </button>\n            </div>\n          </div>\n        </form>\n        {this.state.eosLeft > 0 && <Loading />}\n        {this.state.loaded && eosFound === 0 && (\n          <div className=\"alert alert-info\">No EOs found.</div>\n        )}\n        {eosFound > 0 && (\n          <React.Fragment>\n            <p>Found {eosFound} EOs.</p>\n            <table className=\"table table-striped table-hover table-bordered\">\n              <thead className=\"thead thead-dark\">\n                <tr>\n                  <th scope=\"col\">#</th>\n                  <th scope=\"col\">Size</th>\n                  <th scioe=\"col\">EO</th>\n                </tr>\n              </thead>\n              <tbody>\n                {eoList.map((eo, i) => (\n                  <tr key={i}>\n                    <th scope=\"row\">{i + 1}</th>\n                    <td>{eo.getSize()}</td>\n                    <td>{eo.toString()}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default EOFinder;\n","import React from \"react\";\nimport \"./App.css\";\nimport GenerateScrambles from \"./components/GenerateScrambles\";\nimport GenerateRank from \"./components/GenerateRank\";\nimport Home from \"./components/Home\";\nimport NavBar from \"./components/NavBar\";\nimport About from \"./components/About\";\nimport ScrambleImage from \"./components/ScrambleImage\";\nimport EOFinder from \"./components/EOFinder\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nconst baseLink = \"/\";\nconst rankLink = \"/rank\";\nconst scrambleLink = \"/scramble\";\nconst scrambleImageLink = \"/scramble-image\";\nconst aboutLink = \"/about\";\nconst eOFinderLink = \"/eo-finder\";\n\nfunction App() {\n  return (\n    <HashRouter basename={baseLink}>\n      <div className=\"App\">\n        <NavBar\n          baseLink={baseLink}\n          rankLink={rankLink}\n          scrambleLink={scrambleLink}\n          scrambleImageLink={scrambleImageLink}\n          aboutLink={aboutLink}\n          eOFinderLink={eOFinderLink}\n        />\n        <Switch>\n          <Route exact path={baseLink}>\n            <Home />\n          </Route>\n          <Route path={rankLink}>\n            <GenerateRank />\n          </Route>\n          <Route path={scrambleLink}>\n            <GenerateScrambles />\n          </Route>\n          <Route path={scrambleImageLink}>\n            <ScrambleImage />\n          </Route>\n          <Route path={aboutLink}>\n            <About />\n          </Route>\n          <Route path={eOFinderLink}>\n            <EOFinder />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}